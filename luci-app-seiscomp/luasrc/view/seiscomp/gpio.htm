<%# (C) 2019 Andres Heinloo, Helmholtz-Zentrum Potsdam - Deutsches GeoForschungsZentrum GFZ -%>

<%+header%>

<h2 name="content">GPIO</h2>

<script type="text/javascript">
//<![CDATA[
function gpio_set_xhr(name, value, done) {
	XHR.post("<%=build_url('admin/services/gpio/set')%>", {name: name, value: value}, done)
}

function format_error(e) {
	return "<div title=" + JSON.stringify(e) + ">ERROR</div>"
}

function gpio_switch(button, name, init_state) {
	var td = document.getElementById("gpio-state-" + name)

	button.disabled = true
	button.classList.remove("cbi-button-save")
	button.classList.remove("cbi-button-reset")

	if (td.innerHTML.trim() == "ON") {
		gpio_set_xhr(name, 0, function(x, data) {
			if (data.error) {
				td.innerHTML = format_error(data.error)
			} else {
				td.innerHTML = "OFF"
				button.disabled = false

				if (init_state == 0) {
					button.classList.add("cbi-button-save")
				} else {
					button.classList.add("cbi-button-reset")
				}
			}
		})
	} else {
		gpio_set_xhr(name, 1, function(x, data) {
			if (data.error) {
				td.innerHTML = format_error(data.error)
			} else {
				td.innerHTML = "ON"
				button.disabled = false

				if (init_state == 0) {
					button.classList.add("cbi-button-reset")
				} else {
					button.classList.add("cbi-button-save")
				}
			}
		})
	}
}

function gpio_trigger(button, name, duration) {
	var td = document.getElementById("gpio-state-" + name)

	button.disabled = true
	button.classList.remove("cbi-button-save")
	button.classList.remove("cbi-button-reset")

	function trgwait() {
		if (duration <= 0) {
			button.classList.remove("cbi-button-reset")
			gpio_set_xhr(name, 0, function(x, data) {
				if (data.error) {
					td.innerHTML = format_error(data.error)
				} else {
					td.innerHTML = "--"
					button.disabled = false
					button.classList.add("cbi-button-save")
				}

				button.innerHTML = "Trigger"
			})

			return
		}

		button.innerHTML = duration.toString()

		if (duration < 1.0) {
			window.setTimeout(trgwait, duration * 1000)
		} else {
			window.setTimeout(trgwait, 1000)
		}

		duration -= 1
	}

	gpio_set_xhr(name, 1, function(x, data) {
		if (data.error) {
			td.innerHTML = format_error(data.error)
		} else {
			td.innerHTML = "|"
			button.classList.add("cbi-button-reset")
			trgwait()
		}
	})
}
//]]>
</script>

<div class="cbi-section cbi-tblsection">
	<div class="cbi-section-descr"></div>
	<div class="table">
		<div class="tr table-titles">
			<div class="th">Description</div>
			<div class="th">State</div>
			<div class="th center">Action</div>
		</div><%

		local gpio = require "luci.tools.seiscomp.gpio"

		local function button(text, normal, error, onclick, gpioname, duration)
			if error then
				write('<button class="cbi-button" disabled="disabled">' .. text .. '</button>')
				return
			end

			local cls = normal and "cbi-button-save" or "cbi-button-reset"
			write(string.format([[<button class="cbi-button %s" onclick="%s(this, '%s', %d)">%s</button>]], cls, onclick, gpioname, duration, text))
		end

		local rowstyle = 0

		for _, v in ipairs(gpio.status()) do %>
			<div class="tr cbi-rowstyle-<%=rowstyle+1%>">
				<div class="td"><%=v.description%></div>
				<div class="td" id="gpio-state-<%=v.name%>"><%
					if v.error then
						write(string.format("<div title=%q>ERROR</div>", v.error))
					elseif v.type == "switch" or v.type == "input" then
						write(({[0] = "OFF", [1] = "ON"})[v.state])
					elseif v.type == "trigger" then
						write(({[0] = "--", [1] = "|"})[v.state])
					else
						write("INVALID")
					end %>
				</div>
				<div class="td center"><%
					if v.type == "switch" then
						button("Switch", (v.state == v.init_state), v.error, "gpio_switch", v.name, v.init_state)
					elseif v.type == "trigger" then
						button("Trigger", (v.state == 0), v.error, "gpio_trigger", v.name, v.duration)
					end %>
				</div>
			</div><%

			rowstyle = (rowstyle + 1) % 2
		end %>
	</div>
</div>

<%+footer%>

